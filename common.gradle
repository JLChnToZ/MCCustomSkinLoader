buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

ext.configFile = file "build.properties"
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}
apply from: rootProject.file("BuildScripts/version.gradle")

version = getCSLVersion()
group = config.group
archivesBaseName = rootProject.ext.config.name + "_" + config.minecraft_version
ext.shortVersion = getShortVersion()

sourceCompatibility = targetCompatibility = 1.8
compileJava {
    sourceCompatibility = targetCompatibility = 1.8
}

minecraft {
    version = config.forge_mc_version + "-" + config.forge_version
    runDir = "run"
    mappings = config.mappings_version

    replace '@MOD_VERSION@', rootProject.ext.config.version
    replace '@MOD_FULL_VERSION@', project.version
    replaceIn 'CustomSkinLoader.java'
}

jar {
    manifest {
        attributes 'TweakClass'  : 'customskinloader.tweaker.ModSystemTweaker'
        attributes 'TweakName'   : rootProject.ext.config.name
        attributes 'TweakAuthor' : 'xfl03,JLChnToZ'
        attributes 'TweakVersion': version
        attributes 'TweakOrder'  : '-10'
    }
    exclude 'net/minecraft/client/renderer/texture/NativeImage.class'
    exclude 'net/minecraft/client/Minecraft.class'
}

sourceSets {
    main {
        java {
            //Common
            srcDir '../Common/source'
            //Vanilla
            srcDir '../Vanilla'
            //Special
            srcDir 'source'
        }
        resources {
            //Common
            srcDir '../Common/resource'
        }
    }
}

processResources {
    expand([
            modVersion         : rootProject.ext.config.version,
            modFullVersion     : project.version,
            modShortFullVersion: shortVersion,
            mcVersion          : config.minecraft_version,
            mcFullVersions     : config.minecraft_full_versions,
            forgeVersion       : config.forge_version,
            gitVersion         : System.getenv("CIRCLE_SHA1"),
            buildUrl           : System.getenv("CIRCLE_BUILD_URL")
    ])
}

apply from: rootProject.file("BuildScripts/remap.gradle")
task afterBuild {
    doLast {
        //renameSrgJar
        def file0 = file("build/libs/${archivesBaseName}-${version}.jar")
        def file1 = file("build/libs/${archivesBaseName}-${version}-srg.jar")
        file0.renameTo(file1)

        //reobfSrgToNotch
        reobfSrgToNotch()

        //copyBuildFile
        copy {
            from 'build/libs'
            into '../build/libs'
            include '**/*.jar'
            exclude '**/*-srg.jar'
            exclude '**/*-dev.jar'
            exclude '**/*-sources.jar'
        }

        //copyProfileJson
        File f = project.file("build/resources/main/Profile.json")
        String of = String.format("build/libs/%s-CSL-%s.json", config.minecraft_version, shortVersion)
        File off = rootProject.file(of)
        off.parentFile.mkdirs()
        f.renameTo(off)
    }
}
build.finalizedBy afterBuild

apply plugin: 'maven-publish'
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/xfl03/MCCustomSkinLoader")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId 'customskinloader'
            artifactId project.archivesBaseName
            from(components.java)
        }
    }
}